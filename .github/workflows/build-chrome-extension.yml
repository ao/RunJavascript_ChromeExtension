name: Build Chrome Extension

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: bun test

      - name: Run test coverage
        run: bun test --coverage

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Create build directory
        run: mkdir -p build

      - name: Copy extension files
        run: |
          cp manifest.json build/
          cp popup.html build/
          cp popup.js build/
          cp background.js build/
          cp inject.js build/
          cp storage.js build/
          cp -r assets build/ 2>/dev/null || true

      - name: Validate manifest
        run: |
          if ! jq empty build/manifest.json; then
            echo "Invalid manifest.json"
            exit 1
          fi
          echo "Manifest validation passed"

      - name: Get version from manifest
        id: version
        run: |
          VERSION=$(jq -r '.version' build/manifest.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extension version: $VERSION"

      - name: Create extension package
        run: |
          cd build
          zip -r "../run-javascript-extension-v${{ steps.version.outputs.version }}.zip" .
          cd ..

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: chrome-extension-v${{ steps.version.outputs.version }}
          path: run-javascript-extension-v${{ steps.version.outputs.version }}.zip
          retention-days: 30

      - name: Create Release (on tag)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: run-javascript-extension-v${{ steps.version.outputs.version }}.zip
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-to-webstore:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          pattern: chrome-extension-v*
          merge-multiple: true

      - name: Get extension file
        id: extension-file
        run: |
          FILE=$(ls run-javascript-extension-v*.zip | head -1)
          echo "file=$FILE" >> $GITHUB_OUTPUT
          echo "Found extension file: $FILE"

      - name: Upload to Chrome Web Store
        uses: mnao305/chrome-extension-upload@v5.0.0
        with:
          file-path: ${{ steps.extension-file.outputs.file }}
          extension-id: ${{ secrets.CHROME_EXTENSION_ID }}
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
          publish: true

  notify:
    needs: [build, publish-to-webstore]
    runs-on: ubuntu-latest
    if: always() && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Notify success
        if: needs.publish-to-webstore.result == 'success'
        run: |
          echo "‚úÖ Chrome extension successfully published to Web Store!"
          echo "üéâ Version $(echo ${{ github.ref }} | sed 's/refs\/tags\/v//') is now live!"

      - name: Notify failure
        if: needs.publish-to-webstore.result == 'failure'
        run: |
          echo "‚ùå Failed to publish to Chrome Web Store"
          echo "Please check the logs and try again"
          exit 1
